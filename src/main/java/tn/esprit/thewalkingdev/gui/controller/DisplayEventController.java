package tn.esprit.thewalkingdev.gui.controller;

import java.awt.TextField;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;

import tn.esprit.thewalkingdev.entites.Article;
import tn.esprit.thewalkingdev.gui.delegates.TypeEventCrudDelegate;
import tn.esprit.thewalkingdev.gui.delegates.VenueCrudDelegate;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.stage.Stage;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

public class DisplayEventController implements Initializable, ControlledScreen {
	@FXML
	private Button displayAddEvent;
	@FXML
	private Button displayUpdateEvent;
	@FXML
	private Button deleteEvent;
	@FXML
	private Button addEvent;
	@FXML
	private Button back;
	@FXML
	private ComboBox<String> TypeCB;
	@FXML
	private ComboBox<String> venueCB;
	@FXML
	private Button updateEvent;
	@FXML
	private Button updateEventFromTable;
	@FXML
	private Button addTypeEvent;
	@FXML
	private Button addVenue;
	@FXML
	private Button addOwner;
	ScreensController ctr;
	ObservableList<String> listTypeEvent;
	private ObservableList<String> listVenue;
	@FXML
	private DatePicker dateEvent;
	
	private TextField numberOfReservation;
	// Event Listener on Button[#displayAddEvent].onAction
	@FXML
	public void displayAddEvent(ActionEvent event) {
		try {
			FXMLLoader loader = new FXMLLoader();
	        loader.setLocation(getClass().getResource("/tn/esprit/thewalkingdev/gui/view/AddEvent.fxml"));
	        
				loader.load();
				Parent P = loader.getRoot();
		        Stage stage = new Stage();
		        stage.setScene(new Scene(P));
		        stage.show();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	}
	// Event Listener on Button[#displayUpdateEvent].onAction
	@FXML
	public void displayUpdateEvent(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#deleteEvent].onAction
	@FXML
	public void deleteEvent(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#updateEventFromTable].onAction
	@FXML
	public void updateEventFromTable(ActionEvent event){
		
	}
	// Event Listener on Button[#updateEvent].onAction
	@FXML
	public void updateEvent(ActionEvent event){
		
	}
	// Event Listener on Button[#addEvent].onAction
	@FXML
	public void addEvent(ActionEvent event){
		
	}
	// Event Listener on Button[#back].onAction
	@FXML
	public void back(ActionEvent event){
		
	}
	// Event Listener on Button[#addTypeEvent].onAction
	@FXML
	public void addTypeEvent(ActionEvent event){
		try {
			FXMLLoader loader = new FXMLLoader();
	        loader.setLocation(getClass().getResource("/tn/esprit/thewalkingdev/gui/view/AddTypeEvent.fxml"));
	        
				loader.load();
				Parent P = loader.getRoot();
		        Stage stage = new Stage();
		        stage.setScene(new Scene(P));
		        stage.show();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		
	}
	// Event Listener on Button[#addOwner].onAction
	@FXML
	public void addOwner(ActionEvent event){
		try {
			FXMLLoader loader = new FXMLLoader();
	        loader.setLocation(getClass().getResource("/tn/esprit/thewalkingdev/gui/view/AddOwner.fxml"));
	        
				loader.load();
				Parent P = loader.getRoot();
		        Stage stage = new Stage();
		        stage.setScene(new Scene(P));
		        stage.show();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		
	}
	// Event Listener on Button[#addVenue].onAction
		@FXML
		public void addVenue(ActionEvent event){
			try {
				FXMLLoader loader = new FXMLLoader();
		        loader.setLocation(getClass().getResource("/tn/esprit/thewalkingdev/gui/view/AddVenue.fxml"));
		        
					loader.load();
					Parent P = loader.getRoot();
			        Stage stage = new Stage();
			        stage.setScene(new Scene(P));
			        stage.show();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			
		}
	@Override
	public void setScreenParent(ScreensController screenPage) {
		ctr = screenPage;
		
	}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		
		
		List<String> listTypeEventdb = new ArrayList<String>();
		listTypeEventdb.addAll(TypeEventCrudDelegate.doShowTypeEventByLabel());
		listTypeEvent = FXCollections.observableList(listTypeEventdb);
		System.out.println(listTypeEvent.size());
		TypeCB.setItems(listTypeEvent);
		
		List<String> listVenuedb = new ArrayList<String>();
		listVenuedb.addAll(VenueCrudDelegate.doShowVenueByLabel());
		listVenue = FXCollections.observableArrayList(listTypeEventdb);
		System.out.println(listVenue.size());
		venueCB.setItems(listVenue);
		
		
		
	}
}
